// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/automations": {
            "get": {
                "description": "Retrieve a list of all automation workflows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Get all automations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Automation"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new automation workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Create a new automation",
                "parameters": [
                    {
                        "description": "Automation details",
                        "name": "automation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateAutomationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Automation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/automations/{id}": {
            "get": {
                "description": "Retrieve a specific automation by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Get automation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Automation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Automation"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing automation workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Update automation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Automation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated automation details",
                        "name": "automation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateAutomationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Automation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an automation workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Delete automation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Automation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/automations/{id}/run": {
            "post": {
                "description": "Execute an automation workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Run automation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Automation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/automations/{id}/status": {
            "get": {
                "description": "Get the current status of an automation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "automations"
                ],
                "summary": "Get automation status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Automation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the SecAuto API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "description": "Retrieve system and automation logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Get logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Log level filter",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by automation ID",
                        "name": "automation_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.LogEntry"
                            }
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Retrieve system metrics and statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Metrics"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Automation": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Automated security scanning workflow"
                },
                "id": {
                    "type": "string",
                    "example": "auto-001"
                },
                "name": {
                    "type": "string",
                    "example": "Security Scan"
                },
                "status": {
                    "type": "string",
                    "example": "idle"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "main.CreateAutomationRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "description": {
                    "type": "string",
                    "example": "Automated security scanning workflow"
                },
                "name": {
                    "type": "string",
                    "example": "Security Scan"
                }
            }
        },
        "main.LogEntry": {
            "type": "object",
            "properties": {
                "automation_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "example": "INFO"
                },
                "message": {
                    "type": "string",
                    "example": "Automation started"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "main.Metrics": {
            "type": "object",
            "properties": {
                "completed_automations": {
                    "type": "integer"
                },
                "cpu_usage_percent": {
                    "type": "number"
                },
                "failed_automations": {
                    "type": "integer"
                },
                "memory_usage_mb": {
                    "type": "number"
                },
                "running_automations": {
                    "type": "integer"
                },
                "total_automations": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "SecAuto API",
	Description:      "SecAuto Automation Framework API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
