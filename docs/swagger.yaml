basePath: /api/v1
definitions:
  main.Automation:
    properties:
      config:
        additionalProperties: true
        type: object
      created_at:
        type: string
      description:
        example: Automated security scanning workflow
        type: string
      id:
        example: auto-001
        type: string
      name:
        example: Security Scan
        type: string
      status:
        example: idle
        type: string
      updated_at:
        type: string
    type: object
  main.CreateAutomationRequest:
    properties:
      config:
        additionalProperties: true
        type: object
      description:
        example: Automated security scanning workflow
        type: string
      name:
        example: Security Scan
        type: string
    required:
    - name
    type: object
  main.LogEntry:
    properties:
      automation_id:
        type: string
      id:
        type: string
      level:
        example: INFO
        type: string
      message:
        example: Automation started
        type: string
      timestamp:
        type: string
    type: object
  main.Metrics:
    properties:
      completed_automations:
        type: integer
      cpu_usage_percent:
        type: number
      failed_automations:
        type: integer
      memory_usage_mb:
        type: number
      running_automations:
        type: integer
      total_automations:
        type: integer
      uptime:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: SecAuto Automation Framework API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SecAuto API
  version: "1.0"
paths:
  /automations:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all automation workflows
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Automation'
            type: array
      summary: Get all automations
      tags:
      - automations
    post:
      consumes:
      - application/json
      description: Create a new automation workflow
      parameters:
      - description: Automation details
        in: body
        name: automation
        required: true
        schema:
          $ref: '#/definitions/main.CreateAutomationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Automation'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new automation
      tags:
      - automations
  /automations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an automation workflow
      parameters:
      - description: Automation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Delete automation
      tags:
      - automations
    get:
      consumes:
      - application/json
      description: Retrieve a specific automation by its ID
      parameters:
      - description: Automation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Automation'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get automation by ID
      tags:
      - automations
    put:
      consumes:
      - application/json
      description: Update an existing automation workflow
      parameters:
      - description: Automation ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated automation details
        in: body
        name: automation
        required: true
        schema:
          $ref: '#/definitions/main.CreateAutomationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Automation'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Update automation
      tags:
      - automations
  /automations/{id}/run:
    post:
      consumes:
      - application/json
      description: Execute an automation workflow
      parameters:
      - description: Automation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Run automation
      tags:
      - automations
  /automations/{id}/status:
    get:
      consumes:
      - application/json
      description: Get the current status of an automation
      parameters:
      - description: Automation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get automation status
      tags:
      - automations
  /health:
    get:
      consumes:
      - application/json
      description: Get the health status of the SecAuto API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check endpoint
      tags:
      - health
  /logs:
    get:
      consumes:
      - application/json
      description: Retrieve system and automation logs
      parameters:
      - description: Log level filter
        in: query
        name: level
        type: string
      - description: Filter by automation ID
        in: query
        name: automation_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.LogEntry'
            type: array
      summary: Get logs
      tags:
      - logs
  /metrics:
    get:
      consumes:
      - application/json
      description: Retrieve system metrics and statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Metrics'
      summary: Get metrics
      tags:
      - metrics
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
